% Derivations

clear all;
clc;
format long;
close all;

% Alber Version
syms dt t m mu ...
     Ixx Ixy Ixz ...
     Iyx Iyy Iyz ...
     Izx Izy Izz ...
     px(t) py(t) pz(t) ...
     phi(t) theta(t) psi(t) ...
     vxI(t) vyI(t) vzI(t) ...   % velocity in inertial frame
     vx(t) vy(t) vz(t) ...
     wx(t) wy(t) wz(t) ...
     q0(t) q1(t) q2(t) q3(t) ...
     tx(t) ty(t) tz(t) ... 
     fx(t) fy(t) fz(t) ... % used for force vector command
     real

Rx = [1,         0,        0;
      0,  cos(phi), sin(phi);
      0, -sin(phi), cos(phi)];
Ry = [cos(theta), 0, -sin(theta);
               0, 1,           0;
      sin(theta), 0,  cos(theta)];
Rz = [cos(psi), sin(psi), 0;
     -sin(psi), cos(psi), 0;
             0,        0, 1];

R_euler = Rx*Ry*Rz;

N = [1, sin(phi)*tan(theta), cos(phi)*tan(theta);
     0,            cos(phi),           -sin(phi);
     0, sin(phi)*sec(theta), cos(phi)*sec(theta)];

I = [Ixx 0   0;
     0   Iyy 0;
     0   0   Izz];

V = [vx(t); vy(t); vz(t)]; % principal frame
W = [wx(t); wy(t); wz(t)]; % principal frame

W_prime = [-q1  q0  q3 -q2;
           -q2 -q3  q0  q1;
           -q3  q2 -q1  q0];

quat = [q0; q1; q2; q3];

R_I2P = [q0^2 + q1^2 - q2^2 - q3^2   2*(q1*q2 + q0*q3)           2*(q1*q3 - q0*q2);
         2*(q1*q2 - q0*q3)           q0^2 - q1^2 + q2^2 - q3^2   2*(q2*q3 + q0*q1);
         2*(q1*q3 + q0*q2)           2*(q2*q3 - q0*q1)           q0^2 - q1^2 - q2^2 + q3^2];

R_P2I = R_I2P.';

H_vehicle = I*W; % total vehicle angular momentum

r = [px; py; pz];
a = [-(mu*px)/( px^2 + py^2 + pz^2)^1.5;
     -(mu*py)/( px^2 + py^2 + pz^2)^1.5;
     -(mu*pz)/( px^2 + py^2 + pz^2)^1.5]; % acceleration in inertial frame

f_principalframe = R_I2P*(m*a) + [fx; fy; fz]; % forces in principal frame
t_principalframe = [tx; ty; tz];               % torques in principal frame

% f(x) quaternion attitude parameterization
f_continuous_quat = [0.5 * W_prime.' * W;                                % integrate quaternion
                     inv(I) * (t_principalframe - cross(W, H_vehicle));  % wdot (angular accelerations in principal frame)
                     R_P2I * V;                                          % integrate inertial coords R_principal2inertial*V_principal
                    (1/m) * (f_principalframe - cross(W, m*V))];         % vdot (linear accelerations in principal frame)

f_continuous_rotational = [0.5 * W_prime.' * W;                                 % integrate quaternion
                           inv(I) * (t_principalframe - cross(W, H_vehicle))];  % wdot (angular accelerations in principal frame)

f_discrete_rotational = [q0; q1; q2; q3; wx; wy; wz] + dt*f_continuous_rotational;


vInertial = R_P2I*[vx; vy; vz];

rtnX = [px; py; pz] / norm([px; py; pz]);
rtnZ = cross([px; py; pz], vInertial) / norm(cross([px; py; pz], vInertial));
rtnY = cross(rtnZ, rtnX);

R_I2RTN = [rtnX, rtnY, rtnZ].';
% R_I2RTN = [rtnX.'; rtnY.'; rtnZ.']
R_RTN2I = R_I2RTN.';
R_RTN2P = R_I2P * R_RTN2I;

% RTN magnetic field
mE = 7.943*10^15;       % magnetic dipole moment of earth
i = deg2rad(53);        % inclination
r0 = 550000 + 6371000;
wE = 7.29*10^-5;        % spin rate of earth
mu = 3.98601*10^14;
w0 = (mu/r0^3)^(1/2);
ep = deg2rad(11.7);     % magnetic dipole tilt

Bx =   (mE/(r0^3)) * ( cos(w0*t)*(cos(ep)*sin(i) - sin(ep)*cos(i)*cos(wE*t)) - sin(w0*t)*sin(ep)*sin(wE*t) );
By =  -(mE/(r0^3)) * ( cos(ep)*cos(i) + sin(ep)*sin(i)*cos(wE*t) );
Bz = 2*(mE/(r0^3)) * ( sin(w0*t)*(cos(ep)*sin(i) - sin(ep)*cos(i)*cos(wE*t)) - 2*sin(w0*t)*sin(ep)*sin(wE*t) );

% convert magnetic field into principal frame

R_RTN2P = [(px*q0^2 + px*q1^2 - px*q2^2 - px*q3^2 + 2*py*q0*q3 + 2*py*q1*q2 - 2*pz*q0*q2 + 2*pz*q1*q3)/((px)^2 + (py)^2 + (pz)^2)^0.5, (py^2*q0^4*vx + py^2*q1^4*vx + py^2*q2^4*vx + py^2*q3^4*vx + pz^2*q0^4*vx + pz^2*q1^4*vx + pz^2*q2^4*vx + pz^2*q3^4*vx + 4*px^2*q0^2*q2^2*vx + 4*px^2*q0^2*q3^2*vx + 4*px^2*q1^2*q2^2*vx + 4*px^2*q1^2*q3^2*vx + 2*py^2*q0^2*q1^2*vx + 2*py^2*q0^2*q2^2*vx - 2*py^2*q0^2*q3^2*vx - 2*py^2*q1^2*q2^2*vx + 2*py^2*q1^2*q3^2*vx + 2*py^2*q2^2*q3^2*vx + 2*pz^2*q0^2*q1^2*vx - 2*pz^2*q0^2*q2^2*vx + 2*pz^2*q0^2*q3^2*vx + 2*pz^2*q1^2*q2^2*vx - 2*pz^2*q1^2*q3^2*vx + 2*pz^2*q2^2*q3^2*vx - px*py*q0^4*vy + px*py*q1^4*vy + px*py*q2^4*vy - px*py*q3^4*vy - px*pz*q0^4*vz + px*pz*q1^4*vz - px*pz*q2^4*vz + px*pz*q3^4*vz - 2*px^2*q0*q3^3*vy + 2*px^2*q1*q2^3*vy + 2*px^2*q0^3*q3*vy - 2*px^2*q1^3*q2*vy + 2*px^2*q0*q2^3*vz - 2*px^2*q0^3*q2*vz + 2*py^2*q0*q3^3*vy - 2*py^2*q1*q2^3*vy - 2*py^2*q0^3*q3*vy + 2*py^2*q1^3*q2*vy + 2*px^2*q1*q3^3*vz - 2*px^2*q1^3*q3*vz - 2*pz^2*q0*q2^3*vz + 2*pz^2*q0^3*q2*vz - 2*pz^2*q1*q3^3*vz + 2*pz^2*q1^3*q3*vz + 4*px*py*q0*q3^3*vx + 4*px*py*q1*q2^3*vx - 4*px*py*q0^3*q3*vx - 4*px*py*q1^3*q2*vx - 4*px*pz*q0*q2^3*vx + 4*px*pz*q0^3*q2*vx + 4*px*pz*q1*q3^3*vx - 4*px*pz*q1^3*q3*vx + 2*px*py*q0*q1^3*vz + 2*px*py*q0^3*q1*vz - 2*px*pz*q0*q1^3*vy - 2*px*pz*q0^3*q1*vy + 2*px*py*q2*q3^3*vz + 2*px*py*q2^3*q3*vz + 2*px*pz*q2*q3^3*vy + 2*px*pz*q2^3*q3*vy + 2*py*pz*q0*q2^3*vy + 2*py*pz*q0^3*q2*vy + 2*py*pz*q1*q3^3*vy + 2*py*pz*q1^3*q3*vy - 2*py*pz*q0*q3^3*vz + 2*py*pz*q1*q2^3*vz - 2*py*pz*q0^3*q3*vz + 2*py*pz*q1^3*q2*vz + 6*px*py*q0^2*q3^2*vy - 6*px*py*q1^2*q2^2*vy + 6*px*pz*q0^2*q2^2*vz - 6*px*pz*q1^2*q3^2*vz - 2*px^2*q0^2*q1*q2*vy + 2*px^2*q0*q1^2*q3*vy - 2*px^2*q0*q2^2*q3*vy + 2*px^2*q1*q2*q3^2*vy - 2*px^2*q0*q1^2*q2*vz - 2*py^2*q0^2*q1*q2*vy - 2*px^2*q0^2*q1*q3*vz + 2*py^2*q0*q1^2*q3*vy + 2*px^2*q0*q2*q3^2*vz - 2*py^2*q0*q2^2*q3*vy + 2*px^2*q1*q2^2*q3*vz + 2*py^2*q1*q2*q3^2*vy + 4*py^2*q0*q1^2*q2*vz + 4*pz^2*q0^2*q1*q2*vy + 4*py^2*q0^2*q1*q3*vz - 4*pz^2*q0*q1^2*q3*vy - 4*py^2*q0*q2*q3^2*vz + 4*pz^2*q0*q2^2*q3*vy - 4*py^2*q1*q2^2*q3*vz - 4*pz^2*q1*q2*q3^2*vy - 2*pz^2*q0*q1^2*q2*vz - 2*pz^2*q0^2*q1*q3*vz + 2*pz^2*q0*q2*q3^2*vz + 2*pz^2*q1*q2^2*q3*vz - 4*px*py*q0^2*q1*q2*vx - 4*px*py*q0*q1^2*q3*vx + 4*px*py*q0*q2^2*q3*vx + 4*px*py*q1*q2*q3^2*vx + 4*px*pz*q0*q1^2*q2*vx - 4*px*pz*q0^2*q1*q3*vx - 4*px*pz*q0*q2*q3^2*vx + 4*px*pz*q1*q2^2*q3*vx - 6*px*py*q0*q1*q2^2*vz + 6*px*pz*q0*q1*q2^2*vy + 8*py*pz*q0*q1*q2^2*vx - 6*px*py*q0*q1*q3^2*vz + 6*px*pz*q0*q1*q3^2*vy - 8*py*pz*q0*q1*q3^2*vx - 6*px*py*q0^2*q2*q3*vz - 6*px*pz*q0^2*q2*q3*vy + 8*py*pz*q0^2*q2*q3*vx - 6*px*py*q1^2*q2*q3*vz - 6*px*pz*q1^2*q2*q3*vy - 8*py*pz*q1^2*q2*q3*vx - 6*py*pz*q0*q1^2*q2*vy - 6*py*pz*q0^2*q1*q3*vy - 6*py*pz*q0*q2*q3^2*vy - 6*py*pz*q1*q2^2*q3*vy - 6*py*pz*q0^2*q1*q2*vz + 6*py*pz*q0*q1^2*q3*vz + 6*py*pz*q0*q2^2*q3*vz - 6*py*pz*q1*q2*q3^2*vz - 8*py^2*q0*q1*q2*q3*vx + 8*pz^2*q0*q1*q2*q3*vx)/(((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5*((px)^2 + (py)^2 + (pz)^2)^0.5),  ((q0^2 + q1^2 + q2^2 + q3^2)*(py*q0^2*vz - pz*q0^2*vy - py*q1^2*vz + pz*q1^2*vy + py*q2^2*vz + pz*q2^2*vy - py*q3^2*vz - pz*q3^2*vy - 2*px*q0*q2*vy - 2*px*q1*q3*vy + 2*py*q0*q1*vy - 2*px*q0*q3*vz + 2*px*q1*q2*vz - 2*py*q2*q3*vy + 2*pz*q0*q1*vz + 2*pz*q2*q3*vz))/((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5;
           (py*q0^2 - py*q1^2 + py*q2^2 - py*q3^2 - 2*px*q0*q3 + 2*px*q1*q2 + 2*pz*q0*q1 + 2*pz*q2*q3)/((px)^2 + (py)^2 + (pz)^2)^0.5, (px^2*q0^4*vy + px^2*q1^4*vy + px^2*q2^4*vy + px^2*q3^4*vy + pz^2*q0^4*vy + pz^2*q1^4*vy + pz^2*q2^4*vy + pz^2*q3^4*vy + 2*px^2*q0^2*q1^2*vy + 2*px^2*q0^2*q2^2*vy - 2*px^2*q0^2*q3^2*vy - 2*px^2*q1^2*q2^2*vy + 2*px^2*q1^2*q3^2*vy + 2*px^2*q2^2*q3^2*vy + 4*py^2*q0^2*q1^2*vy + 4*py^2*q0^2*q3^2*vy + 4*py^2*q1^2*q2^2*vy + 4*py^2*q2^2*q3^2*vy - 2*pz^2*q0^2*q1^2*vy + 2*pz^2*q0^2*q2^2*vy + 2*pz^2*q0^2*q3^2*vy + 2*pz^2*q1^2*q2^2*vy + 2*pz^2*q1^2*q3^2*vy - 2*pz^2*q2^2*q3^2*vy - px*py*q0^4*vx + px*py*q1^4*vx + px*py*q2^4*vx - px*py*q3^4*vx - py*pz*q0^4*vz - py*pz*q1^4*vz + py*pz*q2^4*vz + py*pz*q3^4*vz - 2*px^2*q0*q3^3*vx + 2*px^2*q1*q2^3*vx + 2*px^2*q0^3*q3*vx - 2*px^2*q1^3*q2*vx + 2*py^2*q0*q3^3*vx - 2*py^2*q1*q2^3*vx - 2*py^2*q0^3*q3*vx + 2*py^2*q1^3*q2*vx - 2*py^2*q0*q1^3*vz + 2*py^2*q0^3*q1*vz + 2*py^2*q2*q3^3*vz - 2*py^2*q2^3*q3*vz + 2*pz^2*q0*q1^3*vz - 2*pz^2*q0^3*q1*vz - 2*pz^2*q2*q3^3*vz + 2*pz^2*q2^3*q3*vz - 2*px*pz*q0*q1^3*vx - 2*px*pz*q0^3*q1*vx - 4*px*py*q0*q3^3*vy - 4*px*py*q1*q2^3*vy + 4*px*py*q0^3*q3*vy + 4*px*py*q1^3*q2*vy + 2*px*pz*q2*q3^3*vx + 2*px*pz*q2^3*q3*vx - 2*px*py*q0*q2^3*vz - 2*px*py*q0^3*q2*vz + 2*py*pz*q0*q2^3*vx + 2*py*pz*q0^3*q2*vx + 2*px*py*q1*q3^3*vz + 2*px*py*q1^3*q3*vz + 2*py*pz*q1*q3^3*vx + 2*py*pz*q1^3*q3*vx + 4*py*pz*q0*q1^3*vy - 4*py*pz*q0^3*q1*vy + 2*px*pz*q0*q3^3*vz + 2*px*pz*q1*q2^3*vz + 2*px*pz*q0^3*q3*vz + 2*px*pz*q1^3*q2*vz + 4*py*pz*q2*q3^3*vy - 4*py*pz*q2^3*q3*vy + 6*px*py*q0^2*q3^2*vx - 6*px*py*q1^2*q2^2*vx + 6*py*pz*q0^2*q1^2*vz - 6*py*pz*q2^2*q3^2*vz - 2*px^2*q0^2*q1*q2*vx + 2*px^2*q0*q1^2*q3*vx - 2*px^2*q0*q2^2*q3*vx + 2*px^2*q1*q2*q3^2*vx - 2*py^2*q0^2*q1*q2*vx + 2*py^2*q0*q1^2*q3*vx - 2*py^2*q0*q2^2*q3*vx + 2*py^2*q1*q2*q3^2*vx - 4*px^2*q0*q1*q2^2*vz + 4*pz^2*q0^2*q1*q2*vx + 4*px^2*q0*q1*q3^2*vz - 4*pz^2*q0*q1^2*q3*vx + 4*px^2*q0^2*q2*q3*vz + 4*pz^2*q0*q2^2*q3*vx - 4*px^2*q1^2*q2*q3*vz - 4*pz^2*q1*q2*q3^2*vx + 2*py^2*q0*q1*q2^2*vz - 2*py^2*q0*q1*q3^2*vz - 2*py^2*q0^2*q2*q3*vz + 2*py^2*q1^2*q2*q3*vz + 2*pz^2*q0*q1*q2^2*vz - 2*pz^2*q0*q1*q3^2*vz - 2*pz^2*q0^2*q2*q3*vz + 2*pz^2*q1^2*q2*q3*vz - 4*px*py*q0^2*q1*q2*vy + 6*px*pz*q0*q1*q2^2*vx - 4*px*py*q0*q1^2*q3*vy + 6*px*pz*q0*q1*q3^2*vx + 4*px*py*q0*q2^2*q3*vy - 6*px*pz*q0^2*q2*q3*vx + 4*px*py*q1*q2*q3^2*vy - 6*px*pz*q1^2*q2*q3*vx + 6*px*py*q0*q1^2*q2*vz - 8*px*pz*q0*q1^2*q2*vy - 6*py*pz*q0*q1^2*q2*vx - 6*px*py*q0^2*q1*q3*vz + 8*px*pz*q0^2*q1*q3*vy - 6*py*pz*q0^2*q1*q3*vx + 6*px*py*q0*q2*q3^2*vz + 8*px*pz*q0*q2*q3^2*vy - 6*py*pz*q0*q2*q3^2*vx - 6*px*py*q1*q2^2*q3*vz - 8*px*pz*q1*q2^2*q3*vy - 6*py*pz*q1*q2^2*q3*vx - 6*px*pz*q0^2*q1*q2*vz - 4*py*pz*q0*q1*q2^2*vy - 6*px*pz*q0*q1^2*q3*vz + 4*py*pz*q0*q1*q3^2*vy - 6*px*pz*q0*q2^2*q3*vz - 4*py*pz*q0^2*q2*q3*vy - 6*px*pz*q1*q2*q3^2*vz + 4*py*pz*q1^2*q2*q3*vy + 8*px^2*q0*q1*q2*q3*vy - 8*pz^2*q0*q1*q2*q3*vy)/(((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5*((px)^2 + (py)^2 + (pz)^2)^0.5), -((q0^2 + q1^2 + q2^2 + q3^2)*(px*q0^2*vz - pz*q0^2*vx + px*q1^2*vz + pz*q1^2*vx - px*q2^2*vz + pz*q2^2*vx - px*q3^2*vz - pz*q3^2*vx - 2*px*q0*q2*vx - 2*px*q1*q3*vx + 2*py*q0*q1*vx - 2*py*q2*q3*vx + 2*py*q0*q3*vz + 2*py*q1*q2*vz - 2*pz*q0*q2*vz + 2*pz*q1*q3*vz))/((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5;
           (pz*q0^2 - pz*q1^2 - pz*q2^2 + pz*q3^2 + 2*px*q0*q2 + 2*px*q1*q3 - 2*py*q0*q1 + 2*py*q2*q3)/((px)^2 + (py)^2 + (pz)^2)^0.5, (px^2*q0^4*vz + px^2*q1^4*vz + px^2*q2^4*vz + px^2*q3^4*vz + py^2*q0^4*vz + py^2*q1^4*vz + py^2*q2^4*vz + py^2*q3^4*vz + 2*px^2*q0^2*q1^2*vz - 2*px^2*q0^2*q2^2*vz + 2*px^2*q0^2*q3^2*vz + 2*px^2*q1^2*q2^2*vz - 2*px^2*q1^2*q3^2*vz + 2*px^2*q2^2*q3^2*vz - 2*py^2*q0^2*q1^2*vz + 2*py^2*q0^2*q2^2*vz + 2*py^2*q0^2*q3^2*vz + 2*py^2*q1^2*q2^2*vz + 2*py^2*q1^2*q3^2*vz - 2*py^2*q2^2*q3^2*vz + 4*pz^2*q0^2*q1^2*vz + 4*pz^2*q0^2*q2^2*vz + 4*pz^2*q1^2*q3^2*vz + 4*pz^2*q2^2*q3^2*vz - px*pz*q0^4*vx + px*pz*q1^4*vx - px*pz*q2^4*vx + px*pz*q3^4*vx - py*pz*q0^4*vy - py*pz*q1^4*vy + py*pz*q2^4*vy + py*pz*q3^4*vy + 2*px^2*q0*q2^3*vx - 2*px^2*q0^3*q2*vx + 2*px^2*q1*q3^3*vx - 2*px^2*q1^3*q3*vx - 2*py^2*q0*q1^3*vy + 2*py^2*q0^3*q1*vy - 2*pz^2*q0*q2^3*vx + 2*pz^2*q0^3*q2*vx - 2*pz^2*q1*q3^3*vx + 2*pz^2*q1^3*q3*vx + 2*py^2*q2*q3^3*vy - 2*py^2*q2^3*q3*vy + 2*pz^2*q0*q1^3*vy - 2*pz^2*q0^3*q1*vy - 2*pz^2*q2*q3^3*vy + 2*pz^2*q2^3*q3*vy + 2*px*py*q0*q1^3*vx + 2*px*py*q0^3*q1*vx + 2*px*py*q2*q3^3*vx + 2*px*py*q2^3*q3*vx - 2*px*py*q0*q2^3*vy - 2*px*py*q0^3*q2*vy + 2*px*py*q1*q3^3*vy + 2*px*py*q1^3*q3*vy + 2*px*pz*q0*q3^3*vy + 2*px*pz*q1*q2^3*vy + 2*px*pz*q0^3*q3*vy + 2*px*pz*q1^3*q2*vy - 2*py*pz*q0*q3^3*vx + 2*py*pz*q1*q2^3*vx - 2*py*pz*q0^3*q3*vx + 2*py*pz*q1^3*q2*vx + 4*px*pz*q0*q2^3*vz - 4*px*pz*q0^3*q2*vz - 4*px*pz*q1*q3^3*vz + 4*px*pz*q1^3*q3*vz - 4*py*pz*q0*q1^3*vz + 4*py*pz*q0^3*q1*vz - 4*py*pz*q2*q3^3*vz + 4*py*pz*q2^3*q3*vz + 6*px*pz*q0^2*q2^2*vx - 6*px*pz*q1^2*q3^2*vx + 6*py*pz*q0^2*q1^2*vy - 6*py*pz*q2^2*q3^2*vy - 2*px^2*q0*q1^2*q2*vx - 2*px^2*q0^2*q1*q3*vx + 2*px^2*q0*q2*q3^2*vx + 2*px^2*q1*q2^2*q3*vx - 4*px^2*q0*q1*q2^2*vy + 4*py^2*q0*q1^2*q2*vx + 4*px^2*q0*q1*q3^2*vy + 4*py^2*q0^2*q1*q3*vx + 4*px^2*q0^2*q2*q3*vy - 4*py^2*q0*q2*q3^2*vx - 4*px^2*q1^2*q2*q3*vy - 4*py^2*q1*q2^2*q3*vx + 2*py^2*q0*q1*q2^2*vy - 2*pz^2*q0*q1^2*q2*vx - 2*py^2*q0*q1*q3^2*vy - 2*pz^2*q0^2*q1*q3*vx - 2*py^2*q0^2*q2*q3*vy + 2*pz^2*q0*q2*q3^2*vx + 2*py^2*q1^2*q2*q3*vy + 2*pz^2*q1*q2^2*q3*vx + 2*pz^2*q0*q1*q2^2*vy - 2*pz^2*q0*q1*q3^2*vy - 2*pz^2*q0^2*q2*q3*vy + 2*pz^2*q1^2*q2*q3*vy - 6*px*py*q0*q1*q2^2*vx - 6*px*py*q0*q1*q3^2*vx - 6*px*py*q0^2*q2*q3*vx - 6*px*py*q1^2*q2*q3*vx + 6*px*py*q0*q1^2*q2*vy - 6*px*py*q0^2*q1*q3*vy + 6*px*py*q0*q2*q3^2*vy - 6*px*py*q1*q2^2*q3*vy + 8*px*py*q0^2*q1*q2*vz - 6*px*pz*q0^2*q1*q2*vy - 6*py*pz*q0^2*q1*q2*vx + 8*px*py*q0*q1^2*q3*vz - 6*px*pz*q0*q1^2*q3*vy + 6*py*pz*q0*q1^2*q3*vx - 8*px*py*q0*q2^2*q3*vz - 6*px*pz*q0*q2^2*q3*vy + 6*py*pz*q0*q2^2*q3*vx - 8*px*py*q1*q2*q3^2*vz - 6*px*pz*q1*q2*q3^2*vy - 6*py*pz*q1*q2*q3^2*vx + 4*px*pz*q0*q1^2*q2*vz - 4*px*pz*q0^2*q1*q3*vz - 4*px*pz*q0*q2*q3^2*vz + 4*px*pz*q1*q2^2*q3*vz - 4*py*pz*q0*q1*q2^2*vz + 4*py*pz*q0*q1*q3^2*vz - 4*py*pz*q0^2*q2*q3*vz + 4*py*pz*q1^2*q2*q3*vz - 8*px^2*q0*q1*q2*q3*vz + 8*py^2*q0*q1*q2*q3*vz)/(((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5*((px)^2 + (py)^2 + (pz)^2)^0.5),  ((q0^2 + q1^2 + q2^2 + q3^2)*(px*q0^2*vy - py*q0^2*vx + px*q1^2*vy + py*q1^2*vx - px*q2^2*vy - py*q2^2*vx - px*q3^2*vy + py*q3^2*vx + 2*px*q0*q3*vx - 2*px*q1*q2*vx - 2*pz*q0*q1*vx + 2*py*q0*q3*vy + 2*py*q1*q2*vy - 2*pz*q2*q3*vx - 2*pz*q0*q2*vy + 2*pz*q1*q3*vy))/((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5];
 
B_principal = R_RTN2P*[Bx; By; Bz];

% sun sensors
sunPointingVectorECI = [-1; 0; 0];
sunPointingVectorPrincipal = R_I2P*sunPointingVectorECI;

% measurement equations
g = [wx;    % gyro
     wy;
     wz;
     q2^2 - q1^2 - q0^2 + q3^2; % sun sensor
     2*q0*q3 - 2*q1*q2;
    -2*q0*q2 - 2*q1*q3;   
  -((2.3960e-05*cos(0.0011*t)*(0.1220*cos(7.2900e-05*t) - 0.7820) + 4.8587e-06*sin(0.0011*t)*sin(7.2900e-05*t))*(px*q0^2 + px*q1^2 - px*q2^2 - px*q3^2 + 2*py*q0*q3 + 2*py*q1*q2 - 2*pz*q0*q2 + 2*pz*q1*q3))/(px^2 + py^2 + pz^2)^0.5 - ((3.8803e-06*cos(7.2900e-05*t) + 1.4120e-05)*(py^2*q0^4*vx + py^2*q1^4*vx + py^2*q2^4*vx + py^2*q3^4*vx + pz^2*q0^4*vx + pz^2*q1^4*vx + pz^2*q2^4*vx + pz^2*q3^4*vx + 4*px^2*q0^2*q2^2*vx + 4*px^2*q0^2*q3^2*vx + 4*px^2*q1^2*q2^2*vx + 4*px^2*q1^2*q3^2*vx + 2*py^2*q0^2*q1^2*vx + 2*py^2*q0^2*q2^2*vx - 2*py^2*q0^2*q3^2*vx - 2*py^2*q1^2*q2^2*vx + 2*py^2*q1^2*q3^2*vx + 2*py^2*q2^2*q3^2*vx + 2*pz^2*q0^2*q1^2*vx - 2*pz^2*q0^2*q2^2*vx + 2*pz^2*q0^2*q3^2*vx + 2*pz^2*q1^2*q2^2*vx - 2*pz^2*q1^2*q3^2*vx + 2*pz^2*q2^2*q3^2*vx - px*py*q0^4*vy + px*py*q1^4*vy + px*py*q2^4*vy - px*py*q3^4*vy - px*pz*q0^4*vz + px*pz*q1^4*vz - px*pz*q2^4*vz + px*pz*q3^4*vz - 2*px^2*q0*q3^3*vy + 2*px^2*q1*q2^3*vy + 2*px^2*q0^3*q3*vy - 2*px^2*q1^3*q2*vy + 2*px^2*q0*q2^3*vz - 2*px^2*q0^3*q2*vz + 2*py^2*q0*q3^3*vy - 2*py^2*q1*q2^3*vy - 2*py^2*q0^3*q3*vy + 2*py^2*q1^3*q2*vy + 2*px^2*q1*q3^3*vz - 2*px^2*q1^3*q3*vz - 2*pz^2*q0*q2^3*vz + 2*pz^2*q0^3*q2*vz - 2*pz^2*q1*q3^3*vz + 2*pz^2*q1^3*q3*vz + 4*px*py*q0*q3^3*vx + 4*px*py*q1*q2^3*vx - 4*px*py*q0^3*q3*vx - 4*px*py*q1^3*q2*vx - 4*px*pz*q0*q2^3*vx + 4*px*pz*q0^3*q2*vx + 4*px*pz*q1*q3^3*vx - 4*px*pz*q1^3*q3*vx + 2*px*py*q0*q1^3*vz + 2*px*py*q0^3*q1*vz - 2*px*pz*q0*q1^3*vy - 2*px*pz*q0^3*q1*vy + 2*px*py*q2*q3^3*vz + 2*px*py*q2^3*q3*vz + 2*px*pz*q2*q3^3*vy + 2*px*pz*q2^3*q3*vy + 2*py*pz*q0*q2^3*vy + 2*py*pz*q0^3*q2*vy + 2*py*pz*q1*q3^3*vy + 2*py*pz*q1^3*q3*vy - 2*py*pz*q0*q3^3*vz + 2*py*pz*q1*q2^3*vz - 2*py*pz*q0^3*q3*vz + 2*py*pz*q1^3*q2*vz + 6*px*py*q0^2*q3^2*vy - 6*px*py*q1^2*q2^2*vy + 6*px*pz*q0^2*q2^2*vz - 6*px*pz*q1^2*q3^2*vz - 2*px^2*q0^2*q1*q2*vy + 2*px^2*q0*q1^2*q3*vy - 2*px^2*q0*q2^2*q3*vy + 2*px^2*q1*q2*q3^2*vy - 2*px^2*q0*q1^2*q2*vz - 2*py^2*q0^2*q1*q2*vy - 2*px^2*q0^2*q1*q3*vz + 2*py^2*q0*q1^2*q3*vy + 2*px^2*q0*q2*q3^2*vz - 2*py^2*q0*q2^2*q3*vy + 2*px^2*q1*q2^2*q3*vz + 2*py^2*q1*q2*q3^2*vy + 4*py^2*q0*q1^2*q2*vz + 4*pz^2*q0^2*q1*q2*vy + 4*py^2*q0^2*q1*q3*vz - 4*pz^2*q0*q1^2*q3*vy - 4*py^2*q0*q2*q3^2*vz + 4*pz^2*q0*q2^2*q3*vy - 4*py^2*q1*q2^2*q3*vz - 4*pz^2*q1*q2*q3^2*vy - 2*pz^2*q0*q1^2*q2*vz - 2*pz^2*q0^2*q1*q3*vz + 2*pz^2*q0*q2*q3^2*vz + 2*pz^2*q1*q2^2*q3*vz - 4*px*py*q0^2*q1*q2*vx - 4*px*py*q0*q1^2*q3*vx + 4*px*py*q0*q2^2*q3*vx + 4*px*py*q1*q2*q3^2*vx + 4*px*pz*q0*q1^2*q2*vx - 4*px*pz*q0^2*q1*q3*vx - 4*px*pz*q0*q2*q3^2*vx + 4*px*pz*q1*q2^2*q3*vx - 6*px*py*q0*q1*q2^2*vz + 6*px*pz*q0*q1*q2^2*vy + 8*py*pz*q0*q1*q2^2*vx - 6*px*py*q0*q1*q3^2*vz + 6*px*pz*q0*q1*q3^2*vy - 8*py*pz*q0*q1*q3^2*vx - 6*px*py*q0^2*q2*q3*vz - 6*px*pz*q0^2*q2*q3*vy + 8*py*pz*q0^2*q2*q3*vx - 6*px*py*q1^2*q2*q3*vz - 6*px*pz*q1^2*q2*q3*vy - 8*py*pz*q1^2*q2*q3*vx - 6*py*pz*q0*q1^2*q2*vy - 6*py*pz*q0^2*q1*q3*vy - 6*py*pz*q0*q2*q3^2*vy - 6*py*pz*q1*q2^2*q3*vy - 6*py*pz*q0^2*q1*q2*vz + 6*py*pz*q0*q1^2*q3*vz + 6*py*pz*q0*q2^2*q3*vz - 6*py*pz*q1*q2*q3^2*vz - 8*py^2*q0*q1*q2*q3*vx + 8*pz^2*q0*q1*q2*q3*vx))/(((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5*(px^2 + py^2 + pz^2)^0.5) - ((4.7919e-05*sin(0.0011*t)*(0.1220*cos(7.2900e-05*t) - 0.7820) + 1.9435e-05*sin(0.0011*t)*sin(7.2900e-05*t))*(q0^2 + q1^2 + q2^2 + q3^2)*(py*q0^2*vz - pz*q0^2*vy - py*q1^2*vz + pz*q1^2*vy + py*q2^2*vz + pz*q2^2*vy - py*q3^2*vz - pz*q3^2*vy - 2*px*q0*q2*vy - 2*px*q1*q3*vy + 2*py*q0*q1*vy - 2*px*q0*q3*vz + 2*px*q1*q2*vz - 2*py*q2*q3*vy + 2*pz*q0*q1*vz + 2*pz*q2*q3*vz))/((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5;
   ((4.7919e-05*sin(0.0011*t)*(0.1220*cos(7.2900e-05*t) - 0.7820) + 1.9435e-05*sin(0.0011*t)*sin(7.2900e-05*t))*(q0^2 + q1^2 + q2^2 + q3^2)*(px*q0^2*vz - pz*q0^2*vx + px*q1^2*vz + pz*q1^2*vx - px*q2^2*vz + pz*q2^2*vx - px*q3^2*vz - pz*q3^2*vx - 2*px*q0*q2*vx - 2*px*q1*q3*vx + 2*py*q0*q1*vx - 2*py*q2*q3*vx + 2*py*q0*q3*vz + 2*py*q1*q2*vz - 2*pz*q0*q2*vz + 2*pz*q1*q3*vz))/((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5 - ((3.8803e-06*cos(7.2900e-05*t) + 1.4120e-05)*(px^2*q0^4*vy + px^2*q1^4*vy + px^2*q2^4*vy + px^2*q3^4*vy + pz^2*q0^4*vy + pz^2*q1^4*vy + pz^2*q2^4*vy + pz^2*q3^4*vy + 2*px^2*q0^2*q1^2*vy + 2*px^2*q0^2*q2^2*vy - 2*px^2*q0^2*q3^2*vy - 2*px^2*q1^2*q2^2*vy + 2*px^2*q1^2*q3^2*vy + 2*px^2*q2^2*q3^2*vy + 4*py^2*q0^2*q1^2*vy + 4*py^2*q0^2*q3^2*vy + 4*py^2*q1^2*q2^2*vy + 4*py^2*q2^2*q3^2*vy - 2*pz^2*q0^2*q1^2*vy + 2*pz^2*q0^2*q2^2*vy + 2*pz^2*q0^2*q3^2*vy + 2*pz^2*q1^2*q2^2*vy + 2*pz^2*q1^2*q3^2*vy - 2*pz^2*q2^2*q3^2*vy - px*py*q0^4*vx + px*py*q1^4*vx + px*py*q2^4*vx - px*py*q3^4*vx - py*pz*q0^4*vz - py*pz*q1^4*vz + py*pz*q2^4*vz + py*pz*q3^4*vz - 2*px^2*q0*q3^3*vx + 2*px^2*q1*q2^3*vx + 2*px^2*q0^3*q3*vx - 2*px^2*q1^3*q2*vx + 2*py^2*q0*q3^3*vx - 2*py^2*q1*q2^3*vx - 2*py^2*q0^3*q3*vx + 2*py^2*q1^3*q2*vx - 2*py^2*q0*q1^3*vz + 2*py^2*q0^3*q1*vz + 2*py^2*q2*q3^3*vz - 2*py^2*q2^3*q3*vz + 2*pz^2*q0*q1^3*vz - 2*pz^2*q0^3*q1*vz - 2*pz^2*q2*q3^3*vz + 2*pz^2*q2^3*q3*vz - 2*px*pz*q0*q1^3*vx - 2*px*pz*q0^3*q1*vx - 4*px*py*q0*q3^3*vy - 4*px*py*q1*q2^3*vy + 4*px*py*q0^3*q3*vy + 4*px*py*q1^3*q2*vy + 2*px*pz*q2*q3^3*vx + 2*px*pz*q2^3*q3*vx - 2*px*py*q0*q2^3*vz - 2*px*py*q0^3*q2*vz + 2*py*pz*q0*q2^3*vx + 2*py*pz*q0^3*q2*vx + 2*px*py*q1*q3^3*vz + 2*px*py*q1^3*q3*vz + 2*py*pz*q1*q3^3*vx + 2*py*pz*q1^3*q3*vx + 4*py*pz*q0*q1^3*vy - 4*py*pz*q0^3*q1*vy + 2*px*pz*q0*q3^3*vz + 2*px*pz*q1*q2^3*vz + 2*px*pz*q0^3*q3*vz + 2*px*pz*q1^3*q2*vz + 4*py*pz*q2*q3^3*vy - 4*py*pz*q2^3*q3*vy + 6*px*py*q0^2*q3^2*vx - 6*px*py*q1^2*q2^2*vx + 6*py*pz*q0^2*q1^2*vz - 6*py*pz*q2^2*q3^2*vz - 2*px^2*q0^2*q1*q2*vx + 2*px^2*q0*q1^2*q3*vx - 2*px^2*q0*q2^2*q3*vx + 2*px^2*q1*q2*q3^2*vx - 2*py^2*q0^2*q1*q2*vx + 2*py^2*q0*q1^2*q3*vx - 2*py^2*q0*q2^2*q3*vx + 2*py^2*q1*q2*q3^2*vx - 4*px^2*q0*q1*q2^2*vz + 4*pz^2*q0^2*q1*q2*vx + 4*px^2*q0*q1*q3^2*vz - 4*pz^2*q0*q1^2*q3*vx + 4*px^2*q0^2*q2*q3*vz + 4*pz^2*q0*q2^2*q3*vx - 4*px^2*q1^2*q2*q3*vz - 4*pz^2*q1*q2*q3^2*vx + 2*py^2*q0*q1*q2^2*vz - 2*py^2*q0*q1*q3^2*vz - 2*py^2*q0^2*q2*q3*vz + 2*py^2*q1^2*q2*q3*vz + 2*pz^2*q0*q1*q2^2*vz - 2*pz^2*q0*q1*q3^2*vz - 2*pz^2*q0^2*q2*q3*vz + 2*pz^2*q1^2*q2*q3*vz - 4*px*py*q0^2*q1*q2*vy + 6*px*pz*q0*q1*q2^2*vx - 4*px*py*q0*q1^2*q3*vy + 6*px*pz*q0*q1*q3^2*vx + 4*px*py*q0*q2^2*q3*vy - 6*px*pz*q0^2*q2*q3*vx + 4*px*py*q1*q2*q3^2*vy - 6*px*pz*q1^2*q2*q3*vx + 6*px*py*q0*q1^2*q2*vz - 8*px*pz*q0*q1^2*q2*vy - 6*py*pz*q0*q1^2*q2*vx - 6*px*py*q0^2*q1*q3*vz + 8*px*pz*q0^2*q1*q3*vy - 6*py*pz*q0^2*q1*q3*vx + 6*px*py*q0*q2*q3^2*vz + 8*px*pz*q0*q2*q3^2*vy - 6*py*pz*q0*q2*q3^2*vx - 6*px*py*q1*q2^2*q3*vz - 8*px*pz*q1*q2^2*q3*vy - 6*py*pz*q1*q2^2*q3*vx - 6*px*pz*q0^2*q1*q2*vz - 4*py*pz*q0*q1*q2^2*vy - 6*px*pz*q0*q1^2*q3*vz + 4*py*pz*q0*q1*q3^2*vy - 6*px*pz*q0*q2^2*q3*vz - 4*py*pz*q0^2*q2*q3*vy - 6*px*pz*q1*q2*q3^2*vz + 4*py*pz*q1^2*q2*q3*vy + 8*px^2*q0*q1*q2*q3*vy - 8*pz^2*q0*q1*q2*q3*vy))/(((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5*(px^2 + py^2 + pz^2)^0.5) - ((2.3960e-05*cos(0.0011*t)*(0.1220*cos(7.2900e-05*t) - 0.7820) + 4.8587e-06*sin(0.0011*t)*sin(7.2900e-05*t))*(py*q0^2 - py*q1^2 + py*q2^2 - py*q3^2 - 2*px*q0*q3 + 2*px*q1*q2 + 2*pz*q0*q1 + 2*pz*q2*q3))/(px^2 + py^2 + pz^2)^0.5;
  -((2.3960e-05*cos(0.0011*t)*(0.1220*cos(7.2900e-05*t) - 0.7820) + 4.8587e-06*sin(0.0011*t)*sin(7.2900e-05*t))*(pz*q0^2 - pz*q1^2 - pz*q2^2 + pz*q3^2 + 2*px*q0*q2 + 2*px*q1*q3 - 2*py*q0*q1 + 2*py*q2*q3))/(px^2 + py^2 + pz^2)^0.5 - ((3.8803e-06*cos(7.2900e-05*t) + 1.4120e-05)*(px^2*q0^4*vz + px^2*q1^4*vz + px^2*q2^4*vz + px^2*q3^4*vz + py^2*q0^4*vz + py^2*q1^4*vz + py^2*q2^4*vz + py^2*q3^4*vz + 2*px^2*q0^2*q1^2*vz - 2*px^2*q0^2*q2^2*vz + 2*px^2*q0^2*q3^2*vz + 2*px^2*q1^2*q2^2*vz - 2*px^2*q1^2*q3^2*vz + 2*px^2*q2^2*q3^2*vz - 2*py^2*q0^2*q1^2*vz + 2*py^2*q0^2*q2^2*vz + 2*py^2*q0^2*q3^2*vz + 2*py^2*q1^2*q2^2*vz + 2*py^2*q1^2*q3^2*vz - 2*py^2*q2^2*q3^2*vz + 4*pz^2*q0^2*q1^2*vz + 4*pz^2*q0^2*q2^2*vz + 4*pz^2*q1^2*q3^2*vz + 4*pz^2*q2^2*q3^2*vz - px*pz*q0^4*vx + px*pz*q1^4*vx - px*pz*q2^4*vx + px*pz*q3^4*vx - py*pz*q0^4*vy - py*pz*q1^4*vy + py*pz*q2^4*vy + py*pz*q3^4*vy + 2*px^2*q0*q2^3*vx - 2*px^2*q0^3*q2*vx + 2*px^2*q1*q3^3*vx - 2*px^2*q1^3*q3*vx - 2*py^2*q0*q1^3*vy + 2*py^2*q0^3*q1*vy - 2*pz^2*q0*q2^3*vx + 2*pz^2*q0^3*q2*vx - 2*pz^2*q1*q3^3*vx + 2*pz^2*q1^3*q3*vx + 2*py^2*q2*q3^3*vy - 2*py^2*q2^3*q3*vy + 2*pz^2*q0*q1^3*vy - 2*pz^2*q0^3*q1*vy - 2*pz^2*q2*q3^3*vy + 2*pz^2*q2^3*q3*vy + 2*px*py*q0*q1^3*vx + 2*px*py*q0^3*q1*vx + 2*px*py*q2*q3^3*vx + 2*px*py*q2^3*q3*vx - 2*px*py*q0*q2^3*vy - 2*px*py*q0^3*q2*vy + 2*px*py*q1*q3^3*vy + 2*px*py*q1^3*q3*vy + 2*px*pz*q0*q3^3*vy + 2*px*pz*q1*q2^3*vy + 2*px*pz*q0^3*q3*vy + 2*px*pz*q1^3*q2*vy - 2*py*pz*q0*q3^3*vx + 2*py*pz*q1*q2^3*vx - 2*py*pz*q0^3*q3*vx + 2*py*pz*q1^3*q2*vx + 4*px*pz*q0*q2^3*vz - 4*px*pz*q0^3*q2*vz - 4*px*pz*q1*q3^3*vz + 4*px*pz*q1^3*q3*vz - 4*py*pz*q0*q1^3*vz + 4*py*pz*q0^3*q1*vz - 4*py*pz*q2*q3^3*vz + 4*py*pz*q2^3*q3*vz + 6*px*pz*q0^2*q2^2*vx - 6*px*pz*q1^2*q3^2*vx + 6*py*pz*q0^2*q1^2*vy - 6*py*pz*q2^2*q3^2*vy - 2*px^2*q0*q1^2*q2*vx - 2*px^2*q0^2*q1*q3*vx + 2*px^2*q0*q2*q3^2*vx + 2*px^2*q1*q2^2*q3*vx - 4*px^2*q0*q1*q2^2*vy + 4*py^2*q0*q1^2*q2*vx + 4*px^2*q0*q1*q3^2*vy + 4*py^2*q0^2*q1*q3*vx + 4*px^2*q0^2*q2*q3*vy - 4*py^2*q0*q2*q3^2*vx - 4*px^2*q1^2*q2*q3*vy - 4*py^2*q1*q2^2*q3*vx + 2*py^2*q0*q1*q2^2*vy - 2*pz^2*q0*q1^2*q2*vx - 2*py^2*q0*q1*q3^2*vy - 2*pz^2*q0^2*q1*q3*vx - 2*py^2*q0^2*q2*q3*vy + 2*pz^2*q0*q2*q3^2*vx + 2*py^2*q1^2*q2*q3*vy + 2*pz^2*q1*q2^2*q3*vx + 2*pz^2*q0*q1*q2^2*vy - 2*pz^2*q0*q1*q3^2*vy - 2*pz^2*q0^2*q2*q3*vy + 2*pz^2*q1^2*q2*q3*vy - 6*px*py*q0*q1*q2^2*vx - 6*px*py*q0*q1*q3^2*vx - 6*px*py*q0^2*q2*q3*vx - 6*px*py*q1^2*q2*q3*vx + 6*px*py*q0*q1^2*q2*vy - 6*px*py*q0^2*q1*q3*vy + 6*px*py*q0*q2*q3^2*vy - 6*px*py*q1*q2^2*q3*vy + 8*px*py*q0^2*q1*q2*vz - 6*px*pz*q0^2*q1*q2*vy - 6*py*pz*q0^2*q1*q2*vx + 8*px*py*q0*q1^2*q3*vz - 6*px*pz*q0*q1^2*q3*vy + 6*py*pz*q0*q1^2*q3*vx - 8*px*py*q0*q2^2*q3*vz - 6*px*pz*q0*q2^2*q3*vy + 6*py*pz*q0*q2^2*q3*vx - 8*px*py*q1*q2*q3^2*vz - 6*px*pz*q1*q2*q3^2*vy - 6*py*pz*q1*q2*q3^2*vx + 4*px*pz*q0*q1^2*q2*vz - 4*px*pz*q0^2*q1*q3*vz - 4*px*pz*q0*q2*q3^2*vz + 4*px*pz*q1*q2^2*q3*vz - 4*py*pz*q0*q1*q2^2*vz + 4*py*pz*q0*q1*q3^2*vz - 4*py*pz*q0^2*q2*q3*vz + 4*py*pz*q1^2*q2*q3*vz - 8*px^2*q0*q1*q2*q3*vz + 8*py^2*q0*q1*q2*q3*vz))/(((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5*(px^2 + py^2 + pz^2)^0.5) - ((4.7919e-05*sin(0.0011*t)*(0.1220*cos(7.2900e-05*t) - 0.7820) + 1.9435e-05*sin(0.0011*t)*sin(7.2900e-05*t))*(q0^2 + q1^2 + q2^2 + q3^2)*(px*q0^2*vy - py*q0^2*vx + px*q1^2*vy + py*q1^2*vx - px*q2^2*vy - py*q2^2*vx - px*q3^2*vy + py*q3^2*vx + 2*px*q0*q3*vx - 2*px*q1*q2*vx - 2*pz*q0*q1*vx + 2*py*q0*q3*vy + 2*py*q1*q2*vy - 2*pz*q2*q3*vx - 2*pz*q0*q2*vy + 2*pz*q1*q3*vy))/((px*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)) - py*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (px*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vx*(q0^2 + q1^2 - q2^2 - q3^2) - 2*vy*(q0*q3 - q1*q2) + vz*(2*q0*q2 + 2*q1*q3)))^2 + (py*(vz*(q0^2 - q1^2 - q2^2 + q3^2) - 2*vx*(q0*q2 - q1*q3) + vy*(2*q0*q1 + 2*q2*q3)) - pz*(vy*(q0^2 - q1^2 + q2^2 - q3^2) + vx*(2*q0*q3 + 2*q1*q2) - 2*vz*(q0*q1 - q2*q3)))^2)^0.5];

% for use in EKF ----------------------------------------------------------
A_matrix = jacobian(f_discrete_rotational, [q0, q1, q2, q3, wx, wy, wz]);
C_matrix = jacobian(g, [q0, q1, q2, q3, wx, wy, wz]);